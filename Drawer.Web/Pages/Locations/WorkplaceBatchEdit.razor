@using System.Reflection
@using Drawer.Contract.Locations
@using Drawer.Web.Api.Locations
@using Drawer.Web.Pages.Locations.Models
@using Drawer.Web.Utils
@attribute [Route(Paths.WorkplaceBatchEdit)]

<BatchEdit TitleText="작업장 일괄 추가"
           TModel="WorkplaceModel"
           HomePath="@Paths.WorkplaceHome"
           SaveAsyncFunc="@SaveWorkplaces"
           ValidatePropertyFunc="@ValidateProperty" />

@code {
    private readonly WorkplaceModelValidator _validator = new();

    [Inject] public WorkplaceApiClient ApiClient { get; set; } = null!;

    private async Task<string?> SaveWorkplaces(IEnumerable<WorkplaceModel> workplaces)
    {
        var message = string.Empty;
        foreach (var workplace in workplaces)
        {
            var content = new CreateWorkPlaceRequest(workplace.Name!, workplace.Note);
            var response = await ApiClient.AddWorkplace(content);
            if (!response.IsSuccessful)
                message += response.ErrorMessage;
        }
        return message;
    }

    private string? ValidateProperty(WorkplaceModel instance, string property)
    {
        var msg = _validator.ValidateProperty(instance, property);
        return msg;
    }
}
