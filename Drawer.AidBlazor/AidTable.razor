@typeparam T
@inherits MudTable<T> 

@{
    if (!Visible)
        return;

    /* 기본 스타일 설정 */
    <style>
        .selected-row {
            background-color: skyblue
        }
    </style>
    
    base.BuildRenderTree(__builder);
}

@code {
    public AidTable()
    {
        // flex와 테이블 컨테이너 높이를 조절하여 컨텐츠 영역에서 남은 공간을 모두채운다.
        Class = "aid-flex-fill";
        Height = "100%";
        Breakpoint = Breakpoint.None;
        Dense = true;
        Bordered = true;
        FixedHeader = true;
        FixedFooter = true;
        ReadOnly = true;
        HorizontalScrollbar = true;
        LoadingProgressColor = Color.Info;
        CustomFooter = true;
        CustomHeader = true;
        // RowClassFunc 호출을 위해 필요하다.
        OnRowClick = new EventCallback<TableRowClickEventArgs<T>>(this, Row_Click);
        RowClassFunc = GetRowClass;

        if(!string.IsNullOrWhiteSpace(AdditionalClass))
            Class = string.Join(" ", Class, AdditionalClass);
  
    }

    [Parameter]
    public bool Visible { get; set; } = true;

    [Parameter]
    public string AdditionalClass { get; set; } = string.Empty;

    /// <summary>
    /// 현재 선택된 아이템.
    /// SelectedItem속성은 마지막 클릭 로우를 제공하고 선택 취소된 아이템을 판단하지 못한다.
    /// </summary>
    public T? FocusedItem => lastClickedRowNumber == -1 ? default : SelectedItem;

    [Parameter]
    public EventCallback<T?> FocusedItemChanged { get; set; }

    void Row_Click(TableRowClickEventArgs<T> model)
    {
    }

    int lastClickedRowNumber = -1;
    private string GetRowClass(T model, int rowNumber)
    {
        if (MultiSelection)
        {
            if (SelectedItems.Any(x => x.Equals(model)))
            {
                return "selected-row";
            }
            else
            {
                return string.Empty;
            }
        }
        else
        {
            // deselect row
            if (lastClickedRowNumber == rowNumber)
            {
                lastClickedRowNumber = -1;
                return string.Empty;
            }
            // select row
            else if (SelectedItem != null && SelectedItem.Equals(model))
            {
                lastClickedRowNumber = rowNumber;
                return "selected-row";
            }
            // not-selected
            else
            {
                return string.Empty;
            }

        }




    }

}
