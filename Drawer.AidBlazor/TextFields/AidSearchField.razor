@typeparam T

@{
    if (!Visible)
        return;
}
<MudTextField T="@T"
          Disabled="@(!Enabled)"
          Placeholder="@BasePlaceholder"
          @bind-Value="@Value"
          Adornment="@Adornment.Start"
          AdornmentIcon="@Icons.Material.Filled.Search"
          IconSize="@Size.Medium"
          Immediate="@true" />

@code {
    private const string BasePlaceholder = "검색";

    private T? _value;

    [Parameter] public bool Visible { get; set; } = true;
    [Parameter] public bool Enabled { get; set; } = true;
    [Parameter] public EventCallback<T?> ValueChanged { get; set; }
    
    [Parameter]
    public T? Value
    {
        get => _value;
        set
        {
            if (EqualityComparer<T>.Default.Equals(_value, value))
                return;
            _value = value;
            ValueChanged.InvokeAsync(value);
        }
    }
}

