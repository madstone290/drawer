@typeparam T
<AidInput T="T" InputType="InputType.Text" @bind-Value="@Value"></AidInput>
<MudText Color="Color.Error">@Error</MudText>

@code {
    private T? _value;

    [Parameter]
    public T? Value
    {
        get => _value;
        set
        {
            if (EqualityComparer<T>.Default.Equals(_value, value))
                return;
            _value = value;
            ValueChanged.InvokeAsync(value);

            Error = Validate?.Invoke(value);
        }
    }

    [Parameter]
    public EventCallback<T?> ValueChanged { get; set; }

    [Parameter]
    public Func<T?, string>? Validate { get; set; }

    public string? Error { get; set; }


}
